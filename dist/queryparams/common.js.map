{"version":3,"sources":["./src/app/service/auth.service.ts","./src/app/service/config.service.ts"],"names":[],"mappings":"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","file":"common.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { environment } from 'src/environments/environment';\nimport { ConfigService } from 'src/app/service/config.service';\nimport { Observable } from 'rxjs';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  result: any;\n  constructor(public afAuth: AngularFireAuth, private http: HttpClient, private configService: ConfigService, private router: Router) {\n  }\n\n  // tslint:disable-next-line:typedef\n  GoogleAuth() {\n    this.AuthLogin(new firebase.auth.GoogleAuthProvider());\n  }\n\n  // Auth logic to run auth providers\n  // tslint:disable-next-line:typedef\n  AuthLogin(provider) {\n    const afterAuth = this.afAuth\n      .signInWithPopup(provider)\n      .then((result) => {\n        localStorage.setItem('userEmail', result.user.email);\n        localStorage.setItem('userName', result.user.displayName);\n        localStorage.setItem('uid', result.user.uid);\n        this.askDrivePermission();\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  // tslint:disable-next-line:typedef\n  askDrivePermission() {\n    this.http.get(environment.baseUrl + 'permission').subscribe(\n      (res: any) => {\n        window.location = res.data;\n      },\n      err => {\n        console.error(err);\n        this.configService.setConfig({ isLoader: false });\n      }\n    );\n  }\n  logout(){\n    this.configService.setConfig({ isLoader: false });\n    localStorage.clear();\n    this.router.navigate(['/']);\n  }\n  renewToken = new Observable((observer) =>  {\n    const payload = {\n      sheetId: localStorage.getItem('sheetId'),\n      email: localStorage.getItem('userEmail'),\n      refreshToken: localStorage.getItem('refreshToken')\n    }\n\n    this.http.patch(environment.baseUrl + 'update/token', payload).subscribe(\n      (res: any) => {\n        observer.next(true);\n      },\n      err => {\n        this.logout();\n        observer.error('renew token error');\n      }\n    )});\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfigService {\n  private config = new BehaviorSubject({});\n  sharedConfig = this.config.asObservable();\n  private configData: any;\n\n  constructor() { }\n\n  setConfig(configMessage: any) {\n    this.configData = {...this.configData, ...configMessage};\n    this.config.next(this.configData);\n  }\n}\n"],"sourceRoot":"webpack:///"}